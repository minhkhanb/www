/**
*
*Copyright 2010 Microsoft Corp
*
*Licensed under the Apache License, Version 2.0 (the "License");
*you may not use this file except in compliance with the License.
*You may obtain a copy of the License at
*
*http://www.apache.org/licenses/LICENSE-2.0
*
*Unless required by applicable law or agreed to in writing, software
*distributed under the License is distributed on an "AS IS" BASIS,
*WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
*See the License for the specific language governing permissions and
*limitations under the License.
*/
/**
* This code was generated by the tool 'odatagen'.
* Runtime Version:1.0
*s
* Changes to this file may cause incorrect behavior and will be lost if
* the code is regenerated.
*/
#import "DataEntities.h"
/**
 * @interface:Category
 * @key:CategoryID
 */
@implementation UserData
	@synthesize m_UserName;
	@synthesize m_UserID;
	@synthesize m_FacebookID;
	@synthesize m_GameCenterID;
	@synthesize m_SecrectKeyID;
    @synthesize m_Record;

/**
 *Method to create an instance of Category
 */
+ (id) CreateEntityWithGameCenterID:(NSString *)GameCenterID categoryname:(NSString *)GameCenterName
{
	UserData *player = [[UserData alloc]init];
    player.m_GameCenterID = GameCenterID;
    player.m_UserName = GameCenterName;

	return player;
}
/**
 * Initialising object for Category
 */
- (id) init
{
	self=[self initWithUri:nil];
	return self;
}

- (id) initWithUri:(NSString*)anUri 
{
	if(self=[super initWithUri:anUri])
	{
		[self setBaseURI:anUri];
		m_OData_hasStream.booleanvalue=NO;
		[m_OData_entityMap setObject:@"Players" forKey:@"Players"];
		mProperties *obj;
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"50" MinLength:@"" FixedLength:NO Nullable:NO Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_UserName"];
		[obj release];
		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"50" MinLength:@"" FixedLength:NO Nullable:NO Unicode:YES ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_UserID"];
		[obj release];
		
        obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"50" MinLength:@"" FixedLength:NO Nullable:NO Unicode:YES ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_FacebookID"];
		[obj release];

        obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"50" MinLength:@"" FixedLength:NO Nullable:NO Unicode:YES ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_GameCenterID"];
		[obj release];

        obj=[[mProperties alloc]initWithEdmType:@"Edm.String" MaxLength:@"50" MinLength:@"" FixedLength:NO Nullable:NO Unicode:YES ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_SecrectKeyID"];
		[obj release];

		
		obj=[[mProperties alloc]initWithEdmType:@"Edm.Binary" MaxLength:@"Max" MinLength:@"" FixedLength:NO Nullable:YES Unicode:NO ConcurrencyMode:@"" FC_TargetPath:@"" FC_KeepInContent:YES FC_SourcePath:@"" FC_ContentKind:@"" FC_NsPrefix:@"" FC_NsUri:@""];
		[m_OData_propertiesMap setObject:obj forKey:@"m_Record"];
		[obj release];
		
		[m_OData_entityFKRelation setObject:@"FK_Products_Categories" forKey:@"Players"];

		NSMutableArray *anEntityKey=[[NSMutableArray alloc]init];
		[anEntityKey addObject:@"CategoryID"];
		[m_OData_entityKey setObject:anEntityKey forKey:@"Category"];
		[anEntityKey release];
	}
	return self;
}

-(NSMutableArray *)getSyndicateArray
{
	NSMutableArray *syndicateArray=[[NSMutableArray alloc]init];
	
	return [syndicateArray autorelease];
}
-(UserData *)getDeepCopy
{
	UserData *obj=[[UserData alloc]initWithUri:[self getBaseURI]];
	[obj setUserName:[self getUserName]];
	[obj setUserID:[self getUserID]];
	[obj setFacebookID:[self getFacebookID]];
	[obj setGameCenterID:[self getGameCenterID]];
	[obj setSecretKeyID:[self getSecretKeyID]];
    [obj setRecord:[self getRecord]];

	return [obj autorelease];
}
- (void) dealloc
{
	[m_UserName release];
	m_UserName = nil;
	[m_UserID release];
	m_UserID = nil;
	[m_FacebookID release];
	m_FacebookID = nil;
	[m_GameCenterID release];
	m_GameCenterID = nil;
	
	[m_SecrectKeyID release];
	m_SecrectKeyID = nil;
    
    [m_Record release];
	m_Record = nil;
	[super dealloc];
}

@end
